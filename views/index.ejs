<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User Input Form</title>
    <link rel="stylesheet" href="/styles.css" />
    <!-- Custom CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Bootstrap -->
  </head>
  <body>
    <!-- Header -->
    <header class="bg-primary text-white text-center py-4">
      <h1>Welcome to the User Input Form</h1>
    </header>

    <!-- Form Section -->
    <section class="container my-5">
      <h2 class="text-center">Please Fill Out Your Info</h2>
      <form
        action="/submit"
        method="POST"
        class="mx-auto"
        style="max-width: 600px"
      >
        <div class="mb-3">
          <label for="name" class="form-label">Name:</label>
          <input
            type="text"
            id="name"
            name="name"
            class="form-control"
            required
          />
        </div>

        <div class="mb-3">
          <label for="email" class="form-label">Email:</label>
          <input
            type="email"
            id="email"
            name="email"
            class="form-control"
            required
          />
        </div>

        <div class="mb-3">
          <label for="age" class="form-label">Age:</label>
          <input
            type="number"
            id="age"
            name="age"
            class="form-control"
            required
          />
        </div>

        <!-- New Password Field with Strength Indicator -->
        <div class="mb-3">
          <label for="password" class="form-label">Password:</label>
          <input
            type="password"
            id="password"
            name="password"
            class="form-control"
            required
          />
          <small id="passwordHelp" class="form-text text-muted">
            Your password must be at least 8 characters long, contain at least
            one uppercase letter and one number.
          </small>

          <!-- Progress Bar -->
          <div class="progress mt-2">
            <div
              id="passwordStrengthBar"
              class="progress-bar"
              role="progressbar"
              style="width: 0%"
              aria-valuenow="0"
              aria-valuemin="0"
              aria-valuemax="100"
            ></div>
          </div>
        </div>

        <button type="submit" class="btn btn-success w-100">Submit</button>
      </form>
    </section>

    <!-- Footer -->
    <footer class="bg-dark text-white text-center py-4">
      <p>&copy; 2024 My App | All Rights Reserved</p>
    </footer>

    <!-- Inline JavaScript for complex form validation and dynamic DOM manipulation -->
    <script>
      const passwordInput = document.getElementById("password");
      const passwordHelp = document.getElementById("passwordHelp");
      const passwordStrengthBar = document.getElementById(
        "passwordStrengthBar"
      );

      // Function to calculate password strength
      function calculatePasswordStrength(password) {
        let strength = 0;

        // Length requirement
        if (password.length >= 8) strength += 1;

        // Contains uppercase letters
        if (/[A-Z]/.test(password)) strength += 1;

        // Contains numbers
        if (/\d/.test(password)) strength += 1;

        return strength;
      }

      passwordInput.addEventListener("input", function () {
        const password = passwordInput.value;
        const strength = calculatePasswordStrength(password);

        // Update the progress bar
        passwordStrengthBar.style.width = `${(strength / 3) * 100}%`;
        passwordStrengthBar.setAttribute("aria-valuenow", (strength / 3) * 100);

        // Update color and feedback based on strength
        if (strength === 1) {
          passwordStrengthBar.classList.add("bg-danger");
          passwordStrengthBar.classList.remove("bg-warning", "bg-success");
          passwordHelp.textContent = "Weak password";
          passwordHelp.style.color = "red";
        } else if (strength === 2) {
          passwordStrengthBar.classList.add("bg-warning");
          passwordStrengthBar.classList.remove("bg-danger", "bg-success");
          passwordHelp.textContent = "Medium strength password";
          passwordHelp.style.color = "orange";
        } else if (strength === 3) {
          passwordStrengthBar.classList.add("bg-success");
          passwordStrengthBar.classList.remove("bg-danger", "bg-warning");
          passwordHelp.textContent = "Strong password";
          passwordHelp.style.color = "green";
        } else {
          passwordStrengthBar.classList.remove(
            "bg-danger",
            "bg-warning",
            "bg-success"
          );
          passwordStrengthBar.style.width = "0%";
          passwordHelp.textContent =
            "Your password must be at least 8 characters long, contain at least one uppercase letter and one number.";
          passwordHelp.style.color = "";
        }
      });

      // Handle form submission without reloading the page
      document
        .querySelector("form")
        .addEventListener("submit", function (event) {
          event.preventDefault(); // Prevent form from reloading the page

          const formData = new FormData(this);
          const data = Object.fromEntries(formData.entries());

          // Validate password and age
          const passwordPattern = /^(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$/;
          if (!passwordPattern.test(data.password) || data.age < 18) {
            alert("Form validation failed. Please check your inputs.");
            return;
          }

          // Simulate an AJAX request (you can use `fetch` or `axios` for real submissions)
          setTimeout(() => {
            // Simulate success response
            document.body.innerHTML = `<h1>Thank you, ${data.name}!</h1><p>Your form has been submitted successfully.</p>`;
          }, 1000);
        });
    </script>
  </body>
</html>
